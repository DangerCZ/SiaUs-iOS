// Objective-C API for talking to lukechampine.com/us-bindings/gomobile Go package.
//   gobind -lang=objc lukechampine.com/us-bindings/gomobile
//
// File is generated by gobind. Do not edit.

#ifndef __Us_H__
#define __Us_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class UsContract;
@class UsFileSystem;
@class UsHostSet;

/**
 * A Contract is a file contract formed with a Sia host.
 */
@interface UsContract : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewContract parses a binary-encoded contract.
 */
- (nullable instancetype)init:(NSData* _Nullable)b;
@end

/**
 * A FileSystem supports I/O operations on Sia files.
 */
@interface UsFileSystem : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewFileSystem returns a filesystem rooted at root using the provided hosts.
 */
- (nullable instancetype)init:(NSString* _Nullable)root hs:(UsHostSet* _Nullable)hs;
/**
 * Close shuts down the filesystem, flushing any uncommitted writes.
 */
- (BOOL)close:(NSError* _Nullable* _Nullable)error;
/**
 * Download retrieves the contents of the named file.
 */
- (NSData* _Nullable)download:(NSString* _Nullable)name error:(NSError* _Nullable* _Nullable)error;
/**
 * Upload creates a file with the given name, data, and redundancy.
 */
- (BOOL)upload:(NSString* _Nullable)name data:(NSData* _Nullable)data minHosts:(long)minHosts error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * A HostSet is a set of Sia hosts that can be used for uploading and
downloading.
 */
@interface UsHostSet : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewHostSet returns an empty HostSet, using the provided shard server to
resolve public keys to network addresses.
 */
- (nullable instancetype)init:(NSString* _Nullable)shardSrv;
/**
 * AddHost adds a host to the set, using the provided contract to establish a
protocol session. If a session cannot be established, the error is returned,
but the host is still added to the set.
 */
- (BOOL)addHost:(UsContract* _Nullable)c error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * NewContract parses a binary-encoded contract.
 */
FOUNDATION_EXPORT UsContract* _Nullable UsNewContract(NSData* _Nullable b, NSError* _Nullable* _Nullable error);

/**
 * NewFileSystem returns a filesystem rooted at root using the provided hosts.
 */
FOUNDATION_EXPORT UsFileSystem* _Nullable UsNewFileSystem(NSString* _Nullable root, UsHostSet* _Nullable hs, NSError* _Nullable* _Nullable error);

/**
 * NewHostSet returns an empty HostSet, using the provided shard server to
resolve public keys to network addresses.
 */
FOUNDATION_EXPORT UsHostSet* _Nullable UsNewHostSet(NSString* _Nullable shardSrv, NSError* _Nullable* _Nullable error);

#endif
